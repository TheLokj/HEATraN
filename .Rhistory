View(X_classe1)
X_classe1[,1]
ifelse(X_class1[,1]>0)
ifelse(X_classe1[,1]>0)
X_classe1[,1]>0
sum(X_classe1[,1]>0)
sum(na.omit(X_classe1[,1]>0))
for (i in ncol(X)) {
X_classe1["prevalence",i] = sum(na.omit(X_classe1[,i]>0))
}
View(X_classe1)
X_classe1 = na.omit(X[X$classe==1,])
X_classe0 = na.omit(X[X$classe==0,])
for (i in ncol(X)) {
X_classe1["prevalence",i] = sum(na.omit(X_classe1[,i]>0))
}
for (i in 1:ncol(X)) {
X_classe1["prevalence",i] = sum(na.omit(X_classe1[,i]>0))
}
for (i in 1:ncol(X)) {
X_classe0["prevalence_class0",i] = sum(na.omit(X_classe1[,i]>0))
X_classe1["prevalence_class1",i] = sum(na.omit(X_classe1[,i]>0))
}
X_classe0["prevalence_class0",i] = sum(na.omit(X_classe0[,i]>0))
for (i in 1:ncol(X)) {
X_classe0["prevalence_class0",i] = sum(na.omit(X_classe0[,i]>0))
X_classe1["prevalence_class1",i] = sum(na.omit(X_classe1[,i]>0))
}
X_classe1 = na.omit(X[X$classe==1,])
X_classe0 = na.omit(X[X$classe==0,])
for (i in 1:ncol(X)) {
X_classe0["prevalence_class0",i] = sum(na.omit(X_classe0[,i]>0))
X_classe1["prevalence_class1",i] = sum(na.omit(X_classe1[,i]>0))
}
X_classe0["prevalence_class0",]
na.omit(X[X$classe==0,])
View(X_classe0)
X_classe1["prevalence_class1",]
X_classe1["prevalence_class1",]
X_classe1["prevalence_class1",1]
X_classe1["prevalence_class1",1:127]
X_classe1["prevalence_class1",1:1982]
X_classe1["prevalence_class1",1:1981]
X_classe1["prevalence_class1",1:1980]
table(X_classe1["prevalence_class1",]>X_classe0["prevalence_class0",])
table(X_classe1["prevalence_class1",]<X_classe0["prevalence_class0",])
table(X_classe1["prevalence_class1",]>X_classe0["prevalence_class0",])
table(X_classe1["prevalence_class1",]<X_classe0["prevalence_class0",])
View(X)
View(X)
View(X_classe0)
dim(X_classe1["prevalence_class1",])
dim(X_classe1["prevalence_class0",])
table(X_classe1["prevalence_class1",]>X_classe0["prevalence_class0",])
table(X_classe1["prevalence_class1",]<X_classe0["prevalence_class0",])
table(X_classe1["prevalence_class1",]==X_classe0["prevalence_class0",])
X_classe1 = na.omit(X[X$classe==1,])
X_classe0 = na.omit(X[X$classe==0,])
for (i in 1:ncol(X)) {
X_classe0["prevalence_class0",i] = sum(na.omit(X_classe0[,i]))
X_classe1["prevalence_class1",i] = sum(na.omit(X_classe1[,i]))
}
table(X_classe1["prevalence_class1",]>X_classe0["prevalence_class0",])
table(X_classe1["prevalence_class1",]<X_classe0["prevalence_class0",])
shiny::runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN')
library(org.Mm.eg.db)
entrez_ids <- c("246048", "23850", "268902")
symbols <- mapIds(org.Mm.eg.db, keys=entrez_ids, column="SYMBOL", keytype="ENTREZID")
symbols
library(ReactomePA)
mouse_pathways <- names(pathways("mmusculus", "reactome"))  # Organisme selon org2org[3]
grep("IGF transport", mouse_pathways, value=TRUE, ignore.case=TRUE)
BiocManager::install(c(
"ReactomePA>=1.50",
"graphite>=1.44",
"reactome.db>=1.60",
"org.Mm.eg.db>=3.16"
))
enrichment = enrichPathway(genesList, organism=orgs[orgs$organism==organism, "commonName"], universe=data$entrezIds, pvalueCutoff = pval)
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN')
BiocManager::install(version = "3.18")  # Version Bioconductor 2025
BiocManager::install(version = "3.18")  # Version Bioconductor 2025
BiocManager::install(version = "3.18")  # Version Bioconductor 2025
BiocManager::install(version = "3.18")  # Version Bioconductor 2025
BiocManager::install(version = "3.20")  # Version Bioconductor 2025
shiny::runApp('Bureau/Fac/Rshiny/HEATraN')
if (!requireNamespace("BiocManager"))
install.packages("BiocManager")
BiocManager::install("clusterProfiler")
runApp('Bureau/Fac/Rshiny/HEATraN')
if (!requireNamespace("BiocManager"))
install.packages("BiocManager")
BiocManager::install("ReactomePA")
runApp('Bureau/Fac/Rshiny/HEATraN')
BiocManager::install("pathview")
runApp('Bureau/Fac/Rshiny/HEATraN')
BiocManager::install("org.Mm.eg.db")
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN')
ata$ra
runApp('Bureau/Fac/Rshiny/HEATraN')
viewPathway(pathwayDesc[i],
organism="mouse",
readable = F
viewPathway(pathwayDesc[i],
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN')
entrezIds = bitr(data$GeneID, fromType = "ENSEMBL", toType = "ENTREZID", OrgDb = orgs[orgs$organism==organism, "db"], drop=T)
message(paste(name, "already saved."))
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN')
shiny::runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
None
NULL
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
shiny::runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
From a terminal, you can enter :
getReactomePathway
getReactomePathway
getReactomePathway
viewPathway
viewPathway
?viewPathway
shiny::runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
install.packages("ggtext")
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
showtext_auto()
showtext_auto()
library(showtext)
library(sysfonts)
install.packages("showtext")
install.packages("sysfonts")install.packages("ggtext")
install.packages("showtext")
install.packages("sysfonts")
install.packages("ggtext")
font_add("Mulish", "path/to/Mulish-Regular.ttf")  # Replace with the actual path to the Mulish font file
library(sysfonts)
showtext_auto()
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
library(ggtext)
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
plot.annotation
theme
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
geom_richtext
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN')
install.packages("shinycssloader")
install.packages("shinycssloaders")
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
shiny::runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
enrichment()
enrichment()$
enrichment()
enrichment()$
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
"None"[1]
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
shiny::runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
shiny::runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
shiny::runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
shiny::runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
if (!is.null(params$gseaPlot) && params$includePATHWAY && params$includeGSEAplots) {
cat("### GSEA plots\n\n")
data <- params$enrichmentData$enrichment
db <- params$enrichmentData$parameters$DB
for (i in 1:length(params$gseaPlot)) {
# Extraction des informations du pathway selon la base de données
if(db == "KEGG") {
pathway_name <- data$ID[i]
pathway_id <- data$ID[i]
} else if(db == "Reactome") {
pathway_name <- data$Description[i]
pathway_id <- data$ID[i]
} else {
# Cas par défaut
pathway_name <- ifelse(!is.null(data$Description[i]), data$Description[i], data$ID[i])
pathway_id <- data$ID[i]
}
# Récupération des p-valeurs et q-valeurs
p_value <- ifelse(!is.null(data$pvalue[i]),
sprintf("p-value: %.4e", data$pvalue[i]),
ifelse(!is.null(data$p.adjust[i]),
sprintf("p-value: %.4e", data$p.adjust[i]),
"p-value: NA"))
q_value <- ifelse(!is.null(data$qvalue[i]),
sprintf("q-value: %.4e", data$qvalue[i]),
ifelse(!is.null(data$qvalues[i]),
sprintf("q-value: %.4e", data$qvalues[i]),
"q-value: NA"))
cat(sprintf("#### %s\n\n", pathway_name))
cat(sprintf("**ID**: %s  \n", pathway_id))
cat(sprintf("**%s**  \n", p_value))
cat(sprintf("**%s**  \n\n", q_value))
print(params$gseaPlot[[i]])
cat("\n\n")
}
}
runApp('Bureau/Fac/Rshiny/HEATraN')
shiny::runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN')
Sys.time()
format(Sys.time(), '%d %B, %Y')
format(Sys.time(), '%d %B, %Y - %h')
format(Sys.time(), '%d %B, %Y - %hH)
format(Sys.time(), '%d %B, %Y - %H)
format(Sys.time(), '%d %B, %Y %H')
format(Sys.time(), '%d %B (%H.%M), %Y')
format(Sys.time(), '%d %B (%H:%M), %Y')
format(Sys.time(), '%d %B (%H:%M:%s), %Y')
format(Sys.time(), '%d %B (%H:%M:%S), %Y')
format(Sys.time(), '%d %B (%H:%M:%S), %Y')
format(Sys.time(), '%d %B (%H:%M:%S), %Y')
format(Sys.time(), '%d %B (%H:%M:%S), %Y')
format(Sys.time(), '%d %B (%H:%M:%S), %Y')
format(Sys.time(), '%d %B (%H:%M), %Y')
shiny::runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
getReactomePathway <- function(rankedLog2FC, pathwayIDs, pathwayDesc, organism) {
if (!dir.exists("./out/")) {
dir.create("./out/", recursive = TRUE)
}
pathway_images <- list()
for (i in seq_along(pathwayIDs)) {
pathway_id   <- pathwayIDs[i]
pathway_name <- pathwayDesc[i]
safe_name <- gsub("[^a-zA-Z0-9]", "_", pathway_name)
file_name <- paste0("./out/", safe_name, ".png")
message(sprintf("Processing pathway: %s (%s)", pathway_name, pathway_id))
# Si le fichier existe déjà, on le réutilise et on passe au suivant
if (file.exists(file_name)) {
message(sprintf("File already exists, skipping download: %s", file_name))
pathway_images[[i]] <- file_name
next
}
# Tentative de téléchargement via l'API Reactome
tryCatch({
api_url <- paste0(
"https://reactome.org/ContentService/exporter/diagram/",
pathway_id, ".png?quality=7"
)
download.file(api_url, file_name, mode = "wb", quiet = TRUE)
message(sprintf("Saved pathway image to: %s", file_name))
pathway_images[[i]] <- file_name
}, error = function(e) {
message(sprintf(
"Failed to download from API, trying embedded method for %s",
pathway_name
))
# Méthode de secours avec viewPathway + ggplot2
tryCatch({
p <- viewPathway(
pathway_id,
organism = organism,
readable = TRUE,
foldChange = rankedLog2FC
)
ggplot2::ggsave(file_name, p, width = 10, height = 8)
message(sprintf("Saved pathway image using viewPathway to: %s", file_name))
pathway_images[[i]] <- file_name
}, error = function(e2) {
message(sprintf(
"Failed to generate pathway image for %s: %s",
pathway_name, e2$message
))
pathway_images[[i]] <- NULL
})
})
}
return(pathway_images)
}
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
!is.null(goOraResults()$up)
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
runApp('Bureau/Fac/Rshiny/HEATraN/bin')
